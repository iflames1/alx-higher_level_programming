============
print_square
============

``print_square(size)`` print a square of length size with character '#'
::
    >>> print_square = __import__('4-print_square').print_square

Integers
========
::
    >>> print_square(4)
    ####
    ####
    ####
    ####
    >>> print_square(10)
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########

raises a ValueError if size is less than 0
::
    >>> print_square(-4)
    Traceback (most recent call last):
    ValueError: size must be >= 0

Non Integers
============
::
    >>> print_square("4")
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square([4])
    Traceback (most recent call last):
    TypeError: size must be an integer
