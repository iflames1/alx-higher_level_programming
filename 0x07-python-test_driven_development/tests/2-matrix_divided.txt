==============
matrix_divided
==============

``matrix_divided(matrix, div)`` returns a list of element equal to element in
matrix divided by <div>.
::
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Lists
=====
::
    >>> matrix = [
    ... [1, 2, 3],
    ... [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
    >>> matrix = [[4, 5, 6]]
    >>> print(matrix_divided(matrix, 2))
    [[2.0, 2.5, 3.0]]
    >>> print(matrix)
    [[4, 5, 6]]
    >>> matrix = [
    ... [-4, -5, 6],
    ... [0, 100, 9]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[-1.33, -1.67, 2.0], [0.0, 33.33, 3.0]]
    >>> matrix = [
    ... [0, 0, 0],
    ... [0, 0, 0]
    ... ]
    >>> print(matrix_divided(matrix, 5))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

when we try to divide with 0 an error is raised.
::
    >>> matrix = [[4, 5, 6]]
    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

Non-List
========
Raise an error if matrix is not a list of list.
::
    >>> matrix = [4, 5, 6]
    >>> print(matrix_divided(matrix, 2))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = "Hello World"
    >>> print(matrix_divided(matrix, 2))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats
